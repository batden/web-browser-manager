#!/usr/bin/python3

# This file is part of the Bodhi Linux Web Browser Manager.
#
# Bodhi Web Browser Manager is free software: you can redistribute it and/or
# modify it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# The Web Browser Manager is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with Bodhi OS Web Browser Manager.
# If not, see <http://www.gnu.org/licenses/>.

# (c) Feren Team 2015-2020 <ferenosdev@outlook.com>
# (c) AZorin 2010-2015 <azorin@zoringroup.com>
# (c) Zorink 2010 <zorink@zoringroup.com>
#
# Easily install and uninstall web browsers on a GTK based system.
# This is free software made available under the GNU public license.
"""
The Web Browser Manager is a GUI application designed to simplify the
installation and removal of popular web browsers, including those that are not
readily available by default from the repository.
"""
import os
import subprocess
import json
from threading import Thread

import gi

gi.require_version('Gtk', '3.0')  # noqa: E402
from gi.repository import Gtk, GdkPixbuf, GLib  # pylint: disable=C0413

# globals
applogo = "/usr/share/pixmaps/browser-manager.svg"
fixed = Gtk.Fixed()
browser_data = '/usr/lib/browser-manager/browser-data.json'
#    Icons
imgfx = '/usr/share/browser-manager/Firefox.png'
imgcr = '/usr/share/browser-manager/Chrome.png'
imgvi = '/usr/share/browser-manager/Vivaldi.png'
imgch = '/usr/share/browser-manager/Chromium.png'
imgop = '/usr/share/browser-manager/Opera.png'
imgbr = '/usr/share/browser-manager/Brave.png'
imgwf = '/usr/share/browser-manager//Waterfox.png'
imgwe = '/usr/share/browser-manager/Epiphany.png'
imgpm = '/usr/share/browser-manager/Palemoon.png'
imgfa = '/usr/share/browser-manager/Falkon.png'
#    Booleans
binfx = os.path.isfile("/usr/bin/firefox")
bincr = os.path.isfile("/usr/bin/google-chrome")
binvi = os.path.isfile("/usr/bin/vivaldi")
binch = os.path.isfile("/usr/bin/chromium")
binop = os.path.isfile("/usr/bin/opera")
binbr = os.path.isfile("/usr/bin/brave-browser")
binwf = os.path.isfile("/usr/bin/waterfox-g")
binwe = os.path.isfile("/usr/bin/epiphany-browser")
binpm = os.path.isfile("/usr/lib/palemoon/palemoon")
binfa = os.path.isfile("/usr/bin/falkon")


# pylint: disable=too-few-public-methods
class BrowserManagerManager():
    """ Execute the Install or uninstall shell script."""

    def __init__(self, browsername, option, bmself):
        script = "/usr/lib/browser-manager/" + browsername + "/" + option
        try:
            subprocess.run(script, capture_output=False, check=True)
        except subprocess.CalledProcessError:
            pass
        BrowserManager.on_refresh(bmself)


# pylint: disable=too-many-instance-attributes, too-many-public-methods
class BrowserManager(Gtk.Window):
    """ The main GTK application window """
    with open(browser_data, 'r') as f:
        desc = json.load(f)

    def __init__(self):
        super().__init__()

        self.title = "Web Browser Manager"

        self.width = 833
        self.height = 440

        self.connect("destroy", self.on_destroy)

        self.init_gui()

    # pylint: disable=too-many-statements
    def init_gui(self):
        """ Initialize GUI window """
        self.set_title(self.title)
        self.set_position(Gtk.WindowPosition.CENTER)
        self.set_size_request(self.width, self.height)

        #############################
        # Object Creation Functions #
        #############################

        # Program Labels
        def create_label(label_text, label_x, label_y):
            label = Gtk.Label()
            label.set_markup("<b>%s</b>" % label_text)
            label_width, label_height = label.get_layout().get_pixel_size()
            label_h = label_x + 37.5 - (0.5 * label_width)
            label.set_size_request(label_width, label_height)
            fixed.put(label, label_h, label_y)

            return label

        # Logo Buttons
        def about_button(icon_file, position, callback, tooltip):
            pixbuf = GdkPixbuf.Pixbuf.new_from_file(icon_file)
            resized_pixbuf = pixbuf.scale_simple(65, 65,
                                                 GdkPixbuf.InterpType.BILINEAR)
            image = Gtk.Image()
            image.set_from_pixbuf(resized_pixbuf)
            button = Gtk.Button()
            button.set_size_request(75, 75)
            button.add(image)
            fixed.put(button, *position)
            button.connect("clicked", callback)
            button.set_tooltip_text(tooltip)

            return button

        # Interface Main Buttons
        def int_button(label, position, callback, browser_name):
            button = Gtk.Button.new_with_label(label)
            button.connect("clicked", callback)
            button.set_size_request(87, 30)
            fixed.put(button, *position)
            button.set_tooltip_text("%s %s" % (label, browser_name))

            return button

        # Progress Bars
        def progressbar(position):
            pgb = Gtk.ProgressBar()
            fixed.put(pgb, *position)

            def update_progress():
                pgb.pulse()
                GLib.timeout_add(60, update_progress)

            update_progress()

            return pgb

        ############################
        # Browser Object Variables #
        ############################

        # Vivaldi
        create_label("Vivaldi", 48, 10)
        self.aboutvivaldi = about_button(imgvi, (48, 35), self.on_aboutvivaldi,
                                         "About Vivaldi")
        self.statevivaldi = int_button(
            "Uninstall" if binvi else "Install", (43, 130),
            self.on_uninstvivaldi if binvi else self.on_instvivaldi, "Vivaldi")
        self.vi_pgb = progressbar((11, 131))

        # Google Chrome
        create_label("Google Chrome", 213, 10)
        self.aboutchrome = about_button(imgcr, (213, 35), self.on_aboutchrome,
                                        "About Chrome")
        self.statechrome = int_button(
            "Uninstall" if bincr else "Install", (208, 130),
            self.on_uninstchrome if bincr else self.on_instchrome, "Chrome")
        self.cr_pgb = progressbar((176, 131))

        # Chromium
        create_label("Chromium", 378, 10)
        self.aboutchromium = about_button(imgch, (378, 35),
                                          self.on_aboutchromium,
                                          "About Chromium")
        self.statechromium = int_button(
            "Uninstall" if binch else "Install", (373, 130),
            self.on_uninstchromium if binch else self.on_instchromium,
            "Chromium")
        self.ch_pgb = progressbar((341, 131))

        # Palemoon
        create_label("Palemoon", 543, 10)
        self.aboutpalemoon = about_button(imgpm, (543, 35),
                                          self.on_aboutpalemoon,
                                          "About Palemoon")
        self.statepalemoon = int_button(
            "Uninstall" if binpm else "Install", (538, 130),
            self.on_uninstpalemoon if binpm else self.on_instpalemoon,
            "Palemoon")
        self.pm_pgb = progressbar((506, 131))

        # Firefox
        create_label("Mozilla Firefox", 708, 10)
        self.aboutfirefox = about_button(imgfx, (708, 35),
                                         self.on_aboutfirefox,
                                         "About Firefox")
        self.statefirefox = int_button(
            "Uninstall" if binfx else "Install", (703, 130),
            self.on_uninstfirefox if binfx else self.on_instfirefox, "Firefox")
        self.fx_pgb = progressbar((671, 131))

        # Brave
        create_label("Brave", 48, 190)
        self.aboutbrave = about_button(imgbr, (48, 220), self.on_aboutbrave,
                                       "About Brave")
        self.statebrave = int_button(
            "Uninstall" if binbr else "Install", (43, 315),
            self.on_uninstbrave if binbr else self.on_instbrave, "Brave")
        self.br_pgb = progressbar((11, 316))

        # Opera
        create_label("Opera", 213, 190)
        self.aboutopera = about_button(imgop, (213, 220), self.on_aboutopera,
                                       "About Opera")
        self.stateopera = int_button(
            "Uninstall" if binop else "Install", (208, 315),
            self.on_uninstopera if binop else self.on_instopera, "Opera")
        self.op_pgb = progressbar((176, 316))

        # Waterfox
        create_label("Waterfox", 378, 190)
        self.aboutwaterfox = about_button(imgwf, (378, 220),
                                          self.on_aboutwaterfox,
                                          "About Waterfox")
        self.statewaterfox = int_button(
            "Uninstall" if binwf else "Install", (373, 315),
            self.on_uninstwaterfox if binwf else self.on_instwaterfox,
            "Waterfox")
        self.wf_pgb = progressbar((341, 316))

        # Falkon
        create_label("Falkon", 543, 190)
        self.aboutfalkon = about_button(imgfa, (543, 220), self.on_aboutfalkon,
                                        "About Falkon")
        self.statefalkon = int_button(
            "Uninstall" if binfa else "Install", (538, 315),
            self.on_uninstfalkon if binfa else self.on_instfalkon, "Falkon")
        self.fa_pgb = progressbar((506, 316))

        # Epiphany
        create_label("GNOME Web", 708, 190)
        self.aboutweb = about_button(imgwe, (708, 220), self.on_aboutweb,
                                     "About Epiphany")
        self.stateweb = int_button(
            "Uninstall" if binwe else "Install", (703, 315),
            self.on_uninstweb if binwe else self.on_instweb, "Epiphany")
        self.we_pgb = progressbar((671, 316))

        # General Window buttons
        self.closebtn = int_button("Close", (736, 400), self.on_destroy,
                                   "Window")
        self.aboutbtn = int_button("About", (10, 400), self.on_aboutbm,
                                   "Browser Manager")

        ######################################################
        # Packing everything, display everything and refresh #
        ######################################################

        self.add(fixed)
        self.show_all()
        self.on_refresh()

    ###############################
    # Defining the button actions #
    ###############################

    # pylint: disable=unused-argument, no-self-use
    def on_destroy(self, widget):
        """ Window close callback"""
        Gtk.main_quit()

    def begin_process(self):
        """ Set hide buttons when install is started"""
        self.statefirefox.set_visible(False)
        self.statechrome.set_visible(False)
        self.stateweb.set_visible(False)
        self.statevivaldi.set_visible(False)
        self.statechromium.set_visible(False)
        self.stateopera.set_visible(False)
        self.statebrave.set_visible(False)
        self.statefalkon.set_visible(False)
        self.statepalemoon.set_visible(False)
        self.statewaterfox.set_visible(False)
        self.closebtn.set_visible(False)

    def on_refresh(self):
        """ Reset the window to the starting state"""
        # Hide all the progress bars
        self.vi_pgb.set_visible(False)
        self.cr_pgb.set_visible(False)
        self.ch_pgb.set_visible(False)
        self.pm_pgb.set_visible(False)
        self.fx_pgb.set_visible(False)
        self.br_pgb.set_visible(False)
        self.op_pgb.set_visible(False)
        self.wf_pgb.set_visible(False)
        self.fa_pgb.set_visible(False)
        self.we_pgb.set_visible(False)

        # Show the close button
        self.closebtn.set_visible(True)

        # Set browser state buttons visible
        self.statefalkon.set_visible(True)
        self.statevivaldi.set_visible(True)
        self.statechrome.set_visible(True)
        self.statefirefox.set_visible(True)
        self.statechromium.set_visible(True)
        self.statepalemoon.set_visible(True)
        self.stateweb.set_visible(True)
        self.statebrave.set_visible(True)
        self.statewaterfox.set_visible(True)
        self.stateopera.set_visible(True)

    def on_instvivaldi(self, widget):
        """ Button callback"""
        self.begin_process()
        self.vi_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("vivaldi", "install", self))
        sh_script.start()
        self.statevivaldi.set_label("Uninstall")
        self.statevivaldi.disconnect_by_func(self.on_instvivaldi)
        self.statevivaldi.connect("clicked", self.on_uninstvivaldi)

    def on_instchrome(self, widget):
        """ Button callback"""
        self.begin_process()
        self.cr_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("chrome", "install", self))
        sh_script.start()
        self.statechrome.set_label("Uninstall")
        self.statechrome.disconnect_by_func(self.on_instchrome)
        self.statechrome.connect("clicked", self.on_uninstchrome)

    def on_instchromium(self, widget):
        """ Button callback"""
        self.begin_process()
        self.ch_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("chromium", "install", self))
        sh_script.start()
        self.statechromium.set_label("Uninstall")
        self.statechromium.disconnect_by_func(self.on_instchromium)
        self.statechromium.connect("clicked", self.on_uninstchromium)

    def on_instpalemoon(self, widget):
        """ Button callback"""
        self.begin_process()
        self.pm_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("palemoon", "install", self))
        sh_script.start()
        self.statepalemoon.set_label("Uninstall")
        self.statepalemoon.disconnect_by_func(self.on_instpalemoon)
        self.statepalemoon.connect("clicked", self.on_uninstpalemoon)

    def on_instfirefox(self, widget):
        """ Button callback"""
        self.begin_process()
        self.fx_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("firefox", "install", self))
        sh_script.start()
        self.statefirefox.set_label("Uninstall")
        self.statefirefox.disconnect_by_func(self.on_instfirefox)
        self.statefirefox.connect("clicked", self.on_uninstfirefox)

    def on_instbrave(self, widget):
        """ Button callback"""
        self.begin_process()
        self.br_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("brave", "install", self))
        sh_script.start()
        self.statebrave.set_label("Uninstall")
        self.statebrave.disconnect_by_func(self.on_instbrave)
        self.statebrave.connect("clicked", self.on_uninstbrave)

    def on_instopera(self, widget):
        """ Button callback"""
        self.begin_process()
        self.op_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("opera", "install", self))
        sh_script.start()
        self.stateopera.set_label("Uninstall")
        self.stateopera.disconnect_by_func(self.on_instopera)
        self.stateopera.connect("clicked", self.on_uninstopera)

    def on_instwaterfox(self, widget):
        """ Button callback"""
        self.begin_process()
        self.wf_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("waterfox", "install", self))
        sh_script.start()
        self.statewaterfox.set_label("Uninstall")
        self.statewaterfox.disconnect_by_func(self.on_instwaterfox)
        self.statewaterfox.connect("clicked", self.on_uninstwaterfox)

    def on_instfalkon(self, widget):
        """ Button callback"""
        self.begin_process()
        self.fa_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("falkon", "install", self))
        sh_script.start()
        self.statefalkon.set_label("Uninstall")
        self.statefalkon.disconnect_by_func(self.on_instfalkon)
        self.statefalkon.connect("clicked", self.on_uninstfalkon)

    def on_instweb(self, widget):
        """ Button callback"""
        self.begin_process()
        self.we_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("web", "install", self))
        sh_script.start()
        self.stateweb.set_label("Uninstall")
        self.stateweb.disconnect_by_func(self.on_instweb)
        self.stateweb.connect("clicked", self.on_uninstweb)

    def on_uninstvivaldi(self, widget):
        """ Button callback"""
        self.begin_process()
        self.vi_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("vivaldi", "uninstall", self))
        sh_script.start()
        self.statevivaldi.set_label("Install")
        self.statevivaldi.disconnect_by_func(self.on_uninstvivaldi)
        self.statevivaldi.connect("clicked", self.on_instvivaldi)

    def on_uninstchrome(self, widget):
        """ Button callback"""
        self.begin_process()
        self.cr_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("chrome", "uninstall", self))
        sh_script.start()
        self.statechrome.set_label("Install")
        self.statechrome.disconnect_by_func(self.on_uninstchrome)
        self.statechrome.connect("clicked", self.on_instchrome)

    def on_uninstchromium(self, widget):
        """ Button callback"""
        self.begin_process()
        self.ch_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("chromium", "uninstall", self))
        sh_script.start()
        self.statechromium.set_label("Install")
        self.statechromium.disconnect_by_func(self.on_uninstchromium)
        self.statechromium.connect("clicked", self.on_instchromium)

    def on_uninstpalemoon(self, widget):
        """ Button callback"""
        self.begin_process()
        self.pm_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("palemoon", "uninstall", self))
        sh_script.start()
        self.statepalemoon.set_label("Install")
        self.statepalemoon.disconnect_by_func(self.on_uninstpalemoon)
        self.statepalemoon.connect("clicked", self.on_instpalemoon)

    def on_uninstfirefox(self, widget):
        """ Button callback"""
        self.begin_process()
        self.fx_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("firefox", "uninstall", self))
        sh_script.start()
        self.statefirefox.set_label("Install")
        self.statefirefox.disconnect_by_func(self.on_uninstfirefox)
        self.statefirefox.connect("clicked", self.on_instfirefox)

    def on_uninstbrave(self, widget):
        """ Button callback"""
        self.begin_process()
        self.br_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("brave", "uninstall", self))
        sh_script.start()
        self.statebrave.set_label("Install")
        self.statebrave.disconnect_by_func(self.on_uninstbrave)
        self.statebrave.connect("clicked", self.on_instbrave)

    def on_uninstopera(self, widget):
        """ Button callback"""
        self.begin_process()
        self.op_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("opera", "uninstall", self))
        sh_script.start()
        self.stateopera.set_label("Install")
        self.stateopera.disconnect_by_func(self.on_uninstopera)
        self.stateopera.connect("clicked", self.on_instopera)

    def on_uninstwaterfox(self, widget):
        """ Button callback"""
        self.begin_process()
        self.wf_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("waterfox", "uninstall", self))
        sh_script.start()
        self.statewaterfox.set_label("Install")
        self.statewaterfox.disconnect_by_func(self.on_uninstwaterfox)
        self.statewaterfox.connect("clicked", self.on_instwaterfox)

    def on_uninstfalkon(self, widget):
        """ Button callback"""
        self.begin_process()
        self.fa_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("falkon", "uninstall", self))
        sh_script.start()
        self.statefalkon.set_label("Install")
        self.statefalkon.disconnect_by_func(self.on_uninstfalkon)
        self.statefalkon.connect("clicked", self.on_instfalkon)

    def on_uninstweb(self, widget):
        """ Button callback"""
        self.begin_process()
        self.we_pgb.set_visible(True)
        sh_script = Thread(target=BrowserManagerManager,
                           args=("web", "uninstall", self))
        sh_script.start()
        self.stateweb.set_label("Install")
        self.stateweb.disconnect_by_func(self.on_uninstweb)
        self.stateweb.connect("clicked", self.on_instweb)

    def on_aboutvivaldi(self, widget):
        """ About callback"""
        dialog = Gtk.MessageDialog(self,
                                   flags=0,
                                   message_type=Gtk.MessageType.INFO,
                                   buttons=Gtk.ButtonsType.OK,
                                   text=BrowserManager.desc['vivaldi'])
        dialog.run()
        dialog.destroy()

    def on_aboutchrome(self, widget):
        """ About callback"""
        dialog = Gtk.MessageDialog(self, 0, Gtk.MessageType.INFO,
                                   Gtk.ButtonsType.OK,
                                   BrowserManager.desc['chrome'])
        dialog.run()
        dialog.destroy()

    def on_aboutchromium(self, widget):
        """ About callback"""
        dialog = Gtk.MessageDialog(self, 0, Gtk.MessageType.INFO,
                                   Gtk.ButtonsType.OK,
                                   BrowserManager.desc['chromium'])
        dialog.run()
        dialog.destroy()

    def on_aboutpalemoon(self, widget):
        """ About callback"""
        dialog = Gtk.MessageDialog(self, 0, Gtk.MessageType.INFO,
                                   Gtk.ButtonsType.OK,
                                   BrowserManager.desc['palemoon'])
        dialog.run()
        dialog.destroy()

    def on_aboutfirefox(self, widget):
        """ About callback"""
        dialog = Gtk.MessageDialog(self, 0, Gtk.MessageType.INFO,
                                   Gtk.ButtonsType.OK,
                                   BrowserManager.desc['firefox'])
        dialog.run()
        dialog.destroy()

    def on_aboutbrave(self, widget):
        """ About callback"""
        dialog = Gtk.MessageDialog(self, 0, Gtk.MessageType.INFO,
                                   Gtk.ButtonsType.OK,
                                   BrowserManager.desc['brave'])
        dialog.run()
        dialog.destroy()

    def on_aboutopera(self, widget):
        """ About callback"""
        dialog = Gtk.MessageDialog(self, 0, Gtk.MessageType.INFO,
                                   Gtk.ButtonsType.OK,
                                   BrowserManager.desc['opera'])
        dialog.run()
        dialog.destroy()

    def on_aboutwaterfox(self, widget):
        """ About callback"""
        dialog = Gtk.MessageDialog(self, 0, Gtk.MessageType.INFO,
                                   Gtk.ButtonsType.OK,
                                   BrowserManager.desc['waterfox'])
        dialog.run()
        dialog.destroy()

    def on_aboutfalkon(self, widget):
        """ About callback"""
        dialog = Gtk.MessageDialog(self, 0, Gtk.MessageType.INFO,
                                   Gtk.ButtonsType.OK,
                                   BrowserManager.desc['falkon'])
        dialog.run()
        dialog.destroy()

    def on_aboutweb(self, widget):
        """ About callback"""
        dialog = Gtk.MessageDialog(self, 0, Gtk.MessageType.INFO,
                                   Gtk.ButtonsType.OK,
                                   BrowserManager.desc['web'])
        dialog.run()
        dialog.destroy()

    def on_aboutbm(self, widget):
        """ About callback"""
        dialog = Gtk.MessageDialog(self, 0, Gtk.MessageType.INFO,
                                   Gtk.ButtonsType.OK,
                                   BrowserManager.desc['wbm'])
        dialog.run()
        dialog.destroy()


ex = BrowserManager()
Gtk.main()
